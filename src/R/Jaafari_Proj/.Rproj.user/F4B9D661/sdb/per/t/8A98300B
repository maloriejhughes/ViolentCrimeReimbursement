{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Jaafari Collaboration\"\nauthor: \"Malorie Hughes\"\noutput: \n  flexdashboard::flex_dashboard:\n    source_code: embed\n   \n    vertical_layout: fill\n    theme: bootstrap\n---\n\n\n\n```{css}\n\n\n.navbar-inverse {\n \n  filter: grayscale(30%);\n  filter: opacity(80%);\n \n  background-repeat: no-repeat;\n  padding: 3px\n  \n}\n\n\n.navbar-brand {\ncolor:black!important;\nfont-size:15pt;\nfont-weight: 310; \n\nfont-family: 'Helvetica Neue', sans-serif;\n margin: 8px 250px 8px 46px;\n \n \n}\n.navbar-title {\n  color: #ffffff; font-family: 'Lato', sans-serif; font-size: 54px; font-weight: 300; line-height: 58px; margin: 10px; padding: 10px; }\n\np { font-family: 'Helvetica Neue', sans-serif;  color: #777777; margin: 2px 15px 2px 15px; font-weight: 260; }\n\n.navbar-inverse .navbar-text {\n  color: #ffffff;\n}\n\n\n.navbar-inverse .navbar-nav > li > a {\n  color: #404040\n  font-weight: 310; \n\nfont-family: 'Helvetica Neue', sans-serif;\n}\n\n\nblockquote { font-family: 'Bitter',serif; font-size: 24px; border-left: 5px solid #d0d0d0;  margin: 0 0 1 0px; color: #a9a9a9; padding: -15px -15px -15px -15px; text-align: center;\nborder-right: 5px solid #d0d0d0; text-transform: uppercase;\n-moz-box-shadow: 2px 2px 15px #ccc;\n  -webkit-box-shadow: 2px 2px 15px #ccc;\n  box-shadow: 2px 2px 15px #ccc;\n}\n\nul{\n list-style:square;  display: inline-block;   margin: 10px; color: #777777;\n \n}\n\n.level1 { margin-top: 10px; margin-bottom: 12px}\n\n.footer {\n    position: fixed;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    \n   \n    text-align: right;\n}\n\n.dygraph-title {\n  color: navy;\n  font-weight: bold;\n}\n.dygraph-axis-label {\n  font-size: 11px;\n}\n\n```\t\n<div class=\"footer\">\n  <p> mhughes@npr.org |  Updated  <script> document.write(new Date().toLocaleDateString()); </script> </p>\n</div>\n\n\n<style type=\"text/css\">\nh4.date {\n  text-align: right;\n}\n.sidebar { overflow: auto; }\n</style>\n\n\n\n\n\n \n```{r setup, include=FALSE}\n#knitr::opts_chunk$set(echo = TRUE)\n\nlibrary(readr)\nlibrary(tidyverse)\nlibrary(stargazer)\nlibrary(highcharter)\nlibrary(DT)\nRAW_PATH<-\"~/Documents/2018/02_Jaafari_Proj/DATA/RAW/\"\ndata<-read_csv(paste0(RAW_PATH,\"VCAP_STATE_TOTALS_MASTER.csv\"))\n\n```\n\n\n```{r}\nexport <- list(\n  list(text=\"PNG image\",\n       onclick=JS(\"function () { \n                  this.exportChart({ type: 'image/png' }); }\")),\n  list(text=\"JPEG image\",\n       onclick=JS(\"function () { \n                  this.exportChart({ type: 'image/jpeg' }); }\")),\n  list(text=\"SVG vector image\",\n       onclick=JS(\"function () { \n                  this.exportChart({ type: 'image/svg+xml' }); }\")),\n  list(text=\"PDF document\",\n       onclick=JS(\"function () { \n                  this.exportChart({ type: 'application/pdf' }); }\")),\n  list(separator=TRUE),\n  list(text=\"CSV document\",\n       onclick=JS(\"function () { this.downloadCSV(); }\")),\n  list(text=\"XLS document\",\n       onclick=JS(\"function () { this.downloadXLS(); }\"))\n  \n)\n\n\n```\n\n\n\n```{r}\n#head(data,10)\n#tail(data,10)\n# remove NA counties and division by zero\ndata<-data %>% filter(!is.na(County)) %>%\n  mutate(Avg_Paid=replace(Avg_Paid, Avg_Paid=='#DIV/0!', 0)) %>% \n  as.data.frame() \n\n# remove characters from $$ columns and convert to numeric\ndata$Avg_Paid<-gsub('$','',data$Avg_Paid,fixed=TRUE)\ndata$Avg_Paid<-gsub(',','',data$Avg_Paid)\ndata$Avg_Paid<-as.numeric(as.character(data$Avg_Paid)) # as.character first to be safe.\n\ndata$Total_Paid<-gsub('$','',data$Total_Paid,fixed=TRUE)\ndata$Total_Paid<-gsub(',','',data$Total_Paid)\ndata$Total_Paid<-as.numeric(as.character(data$Total_Paid)) # as.character first to be safe.\n\ndata.clean<-data%>% filter(!is.na(County)) %>%mutate(County=replace(County,County==\"Out of state\",\"Out Of State\"))%>%\n  mutate(County=replace(County,County==\"No county\",\"No County\"))%>%\nfilter(!County %in% c(\"TOTAL\"\n                      ,\"Does not include claims being processed\"\n                     , \"OTHER\"\n                   , \"No County\"\n                    ,\"Out Of State\"\n                     ) ) %>% data.frame()\n```\n\n\n\n```{r,plots}\n\n\ndata.county<-data.clean %>% group_by(State,County) %>% filter(Year>=2013)%>%summarize(county_state=paste0(unique(County),\", \",unique(State))\n  ,avg_processed=round(mean(Processed,na.rm=TRUE),2)\n                                        , avg_num_paid=round(mean(Num_Paid,na.rm=TRUE),2)\n                                        , total_processed=sum(Processed,na.rm=TRUE)\n                                        ,total_num_paid=sum(Num_Paid,na.rm=TRUE)\n                                       ,percent_unpaid=round(100*(sum(Processed,na.rm=TRUE)-sum(Num_Paid,na.rm=TRUE))/sum(Processed,na.rm=TRUE))\n                                        ) \n\ndata.county<-data.county %>% data.frame()%>% arrange(desc(percent_unpaid)) %>% mutate(county_state=factor(county_state,levels=county_state))\n#%>% filter(between(row_number(), 1, 15))\n\n\n\n\nx <- c( \"State\",\"Num. Claims Processed\",\"Num. Claims Paid\",\"Percent Claims Unpaid\")\n\ny <- sprintf(\"{point.%s}\", c( \"State\",\"total_processed\",\"total_num_paid\",\"percent_unpaid\"))\ntltip <- tooltip_table(x, y)\n\nplot1<-highchart()%>%\n  hc_add_series(data.county[1:25,], \"column\", hcaes(x = as.character(county_state), \n                                        y =percent_unpaid ,color=State   )) %>%\n  hc_yAxis( title = list(text = \"100*(Total Unpaid)/(Total Processed)\")) %>% \n  hc_xAxis(title = list(text = \" \"),type=\"category\" )%>% \n  hc_tooltip(useHTML = TRUE, headerFormat = \"\", pointFormat = tltip)%>%\n  hc_plotOptions(column = list(itemStyle=list( fillOpacity = 0.1)))%>% \n  hc_title(text=\"Percent of Processed Claims that went Unpaid\")   %>%\n  hc_legend(enabled = FALSE, itemStyle=list(  opacity = 0.75,fontWeight=\"regular\")) %>%\nhc_exporting(\n    enabled = TRUE, filename=\"top25counties_percentClaimsUnpaid\"\n     , formAttributes=list(target=\"_blank\"),\n               buttons=list(contextButton=list(\n               text=\"Export\", theme=list(fill=\"transparent\"),\n                 menuItems=export)) )\n  #%>% hc_add_theme(hc_theme_elementary())\n\n\n#######################################################\n############### PLOT 2\n\ntop_five_per_state<-data.county%>%filter(percent_unpaid!=\"-Inf\") %>% group_by(State) %>%\n  top_n(n = 5, wt = percent_unpaid) %>% arrange(State,desc(percent_unpaid))\n#mutate(County=as.character(County))\n\n\n\nx <- c( \"State\",\"Num. Claims Processed\",\"Num. Claims Paid\",\"Percent Claims Unpaid\")\n\ny <- sprintf(\"{point.%s}\", c( \"State\",\"total_processed\",\"total_num_paid\",\"percent_unpaid\"))\ntltip <- tooltip_table(x, y)\n\nplot2<-highchart()%>%\n  hc_add_series(top_five_per_state, \"bar\", hcaes(x = county_state, \n                                        y =percent_unpaid,group=State    )) %>%\n  hc_yAxis( title = list(text = \"100*(Total Unpaid)/(Total Processed)\"),max=100) %>% \n hc_xAxis(title = list(text = \" \"),type=\"category\" )%>% \n  hc_tooltip(useHTML = TRUE, headerFormat = \"\", pointFormat = tltip)%>%\n  hc_title(text=\"Top Five Counties per State: Percent of Unpaid Claims\")   %>%\n  hc_legend(enabled = FALSE, itemStyle=list(  opacity = 0.75,fontWeight=\"regular\"))%>%\nhc_exporting(\n    enabled = TRUE, filename=\"statesTop5counties_percentClaimsUnpaid\"\n     , formAttributes=list(target=\"_blank\"),\n               buttons=list(contextButton=list(\n               text=\"Export\", theme=list(fill=\"transparent\"),\n                 menuItems=export)) )\n# %>% hc_add_theme(hc_theme_elementary())\n\n```\n\nExploration\n=======================================================================\n\nColumn  {.tabset}\n-------------------------------------\n\n\n### Processed VS Paid\n\nWhich counties experience the largest differences between claims processed and claims paid? \n\n\n```{r,echo=FALSE}\nplot1\n```\n\n\n### States' Top Five Unpaid\nWhich counties have the highest percentage of unpaid claims in each state?\n\n\n```{r,echo=FALSE}\nplot2\n```\n\n### Percent Denials\n\n```{r}\nlibrary(DT)\n\nRAW_PATH<-\"~/Documents/2018/02_Jaafari_Proj/DATA/RAW/\"\ndata<-read_csv(paste0(RAW_PATH,\"VCAP_STATE_TOTALS_MASTER.csv\"))\n\ndata<-data %>% filter(!is.na(County)) %>%\n  mutate(Avg_Paid=replace(Avg_Paid, Avg_Paid=='#DIV/0!', 0)) %>% \n  as.data.frame() \n\n# remove characters from $$ columns and convert to numeric\ndata$Avg_Paid<-gsub('$','',data$Avg_Paid,fixed=TRUE)\ndata$Avg_Paid<-gsub(',','',data$Avg_Paid)\ndata$Avg_Paid<-as.numeric(as.character(data$Avg_Paid)) # as.character first to be safe.\n\ndata$Total_Paid<-gsub('$','',data$Total_Paid,fixed=TRUE)\ndata$Total_Paid<-gsub(',','',data$Total_Paid)\ndata$Total_Paid<-as.numeric(as.character(data$Total_Paid)) # as.character first to be safe.\n\ndata.clean<-data%>% filter(!is.na(County)) %>%mutate(County=replace(County,County==\"Out of state\",\"Out Of State\"))%>%\n  mutate(County=replace(County,County==\"No county\",\"No County\"))%>%\n  filter(!County %in% c(\"TOTAL\"\n                        ,\"Does not include claims being processed\"\n                        , \"OTHER\"\n                        , \"No County\"\n                        ,\"Out Of State\"\n  ) ) %>% data.frame()\n\n\n\n\n  \n  \ndata.county<-data.clean %>% group_by(State,County) %>%summarize(county_state=paste0(unique(County),\", \",unique(State))\n                                                                                      ,avg_processed_per_year=round(mean(Processed,na.rm=TRUE),2)\n                                                                , total_processed_all_years=sum(Processed,na.rm=TRUE)\n                                                                ,percent_denied=round(100*sum(Denied,na.rm=TRUE)/(sum(Processed,na.rm=TRUE)))\n                                                                ,total_denied=sum(Denied,na.rm=TRUE)\n                                                                                      , avg_num_paid=round(mean(Num_Paid,na.rm=TRUE),2)\n                                                                                      \n                                                                                      ,total_num_paid=sum(Num_Paid,na.rm=TRUE)\n                                                                \n                                                                                      ,percent_unpaid=round(100*(sum(Processed,na.rm=TRUE)-sum(Num_Paid,na.rm=TRUE))/sum(Processed,na.rm=TRUE))\n) %>% filter(avg_processed_per_year>20)\n\ndata.county<-data.county %>% data.frame()%>% arrange(desc(percent_denied)) %>% mutate(county_state=factor(county_state,levels=county_state))\n#%>% filter(between(row_number(), 1, 15))\n\n\ndatatable(data.county,  rownames = FALSE, extensions = c('Buttons','FixedColumns'),  options = list(pageLength = 100, fixedColumns = list(leftColumns = 1),\n                                                                                                dom = 'Bfrtip',columnDefs = list(list(searchable = FALSE, targets = 1))\n                                                                                                , \n                                                                                                buttons = \n                                                                                                  list( list(\n                                                                                                    extend = 'collection',\n                                                                                                    buttons = list(list(extend='csv',\n                                                                                                                        filename = 'county_level_summary'),\n                                                                                                                   list(extend='excel',\n                                                                                                                        filename = paste0('unrestricted_CrossPromo_') ) ),text=\"Download\"\n                                                                                                    \n                                                                                                    \n                                                                                                  ))))\n\n\n\n\n\n\n```\n\n\n\n### Top 3 Denials\n\n\n```{r}\ntop_three_per_state<-data.county %>% group_by(State) %>% filter(percent_denied>0)%>%\n  top_n(n = 3, wt = percent_denied) %>% arrange(State,desc(percent_denied))\n\n\ndatatable(top_three_per_state,  rownames = FALSE, extensions = c('Buttons','FixedColumns'),  options = list(pageLength = 100, fixedColumns = list(leftColumns = 1),\n                                                                                                dom = 'Bfrtip',columnDefs = list(list(searchable = FALSE, targets = 1))\n                                                                                                , \n                                                                                                buttons = \n                                                                                                  list( list(\n                                                                                                    extend = 'collection',\n                                                                                                    buttons = list(list(extend='csv',\n                                                                                                                        filename = 'top3counties_percentDenied'),\n                                                                                                                   list(extend='excel',\n                                                                                                                        filename = paste0('top3counties_percentDenied') ) ),text=\"Download\"\n                                                                                                    \n                                                                                                    \n                                                                                                  ))))\n\n\n\n\n```\n\n\n\n### New York: Denied HIC\n\n```{r}\nny_denied<-data.clean %>% filter(State==\"New York\") %>% group_by(County) %>% mutate(Denied=as.integer(as.character(Denied))) %>%mutate(Denied_HIC=as.integer(as.character(Denied_HIC))) %>%\n  summarize(Total_Denied=sum(Denied,na.rm=TRUE)\n                  ,   Total_Denied_HIC=sum(Denied_HIC,na.rm=TRUE)\n                ,Avg_Denied=round(mean(Denied,na.rm=TRUE))\n                ,Avg_Denied_HIC=round(mean(Denied_HIC,na.rm=TRUE))\n                     ,percent_denied_HIC=round(100*sum(Denied_HIC,na.rm=TRUE)/sum(Denied,na.rm=TRUE))\n                                                                                        )\n  \n\n\ndatatable(ny_denied,  rownames = FALSE, extensions = c('Buttons','FixedColumns'),  options = list(pageLength = 100, fixedColumns = list(leftColumns = 1),\n                                                                                                dom = 'Bfrtip',columnDefs = list(list(searchable = FALSE, targets = 1))\n                                                                                                , \n                                                                                                buttons = \n                                                                                                  list( list(\n                                                                                                    extend = 'collection',\n                                                                                                    buttons = list(list(extend='csv',\n                                                                                                                        filename = 'NY_counties_denied_HIC'),\n                                                                                                                   list(extend='excel',\n                                                                                                                        filename = paste0('NY_counties_denied_HIC') ) ),text=\"Download\"\n                                                                                                    \n                                                                                                    \n                                                                                                  ))))\n\n\n\n\n\n# filter(Total_Denied>20)%>%\n#  top_n(n = 3, wt = percent_denied) %>% arrange(State,desc(percent_denied))\n\n\n\n\n```\n\n\n### State-Level\n```{r}\n\nstate_totals<- read_csv(\"/Users/MHughes/Documents/2018/02_Jaafari_Proj/DATA/RAW/STATE_TOTALS_2010-2015.csv\")\n#For New York (2011-2015):\n#  Out of total murder claims, what percentage were denied b/c of a hand in their own crime?\n\nstate_sum<-state_totals%>% group_by(State) %>% summarize(Percent_of_Denials_bc_HIC=round(100*sum(`Denied b/c HIC`,na.rm=TRUE)/sum(`Claims Denied`,na.rm=TRUE),2)\n                                              ,Percent_Murder_Claims_Denied_bc_HIC=round(100*sum(`Denied b/c HIC`,na.rm=TRUE)/sum(`Murder Claims`,na.rm=TRUE))\n                                              )\n\n\n\n\ndatatable(state_sum,  rownames = FALSE, extensions = c('Buttons','FixedColumns'),  options = list(pageLength = 100, fixedColumns = list(leftColumns = 1),\n                                                                                                dom = 'Bfrtip',columnDefs = list(list(searchable = FALSE, targets = 1))\n                                                                                                , \n                                                                                                buttons = \n                                                                                                  list( list(\n                                                                                                    extend = 'collection',\n                                                                                                    buttons = list(list(extend='csv',\n                                                                                                                        filename = 'state_level_summary'),\n                                                                                                                   list(extend='excel',\n                                                                                                                        filename = paste0('state_level_summary') ) ),text=\"Download\"\n                                                                                                    \n                                                                                                    \n                                                                                                  ))))\n\n```\n\n### Denials by % Minority\n\n```{r}\n\npercent_minority<-read_csv(\"/Users/MHughes/Documents/2018/02_Jaafari_Proj/DATA/RAW/CensusRacialData2013.csv\")\n\npercent_minority<- percent_minority%>%  mutate(percent_nonwhite=round(100-White,2))\n\npercent_minority$minority_binned<-NA\npercent_minority$minority_binned=ifelse(percent_minority$percent_nonwhite<=25,25,percent_minority$minority_binned)\npercent_minority$minority_binned=ifelse(percent_minority$percent_nonwhite>25 & percent_minority$percent_nonwhite<=50 ,50,percent_minority$minority_binned)\npercent_minority$minority_binned=ifelse(percent_minority$percent_nonwhite>50 & percent_minority$percent_nonwhite<=75 ,75,percent_minority$minority_binned)\npercent_minority$minority_binned=ifelse(percent_minority$percent_nonwhite>75 & percent_minority$percent_nonwhite<=100 ,100,percent_minority$minority_binned)\n\n\ncounties_with_race<-merge(data.county,percent_minority,by.x=c(\"County\",\"State\"),by.y=c(\"County\",\"State\"))\ncounties_with_race<-counties_with_race%>%filter(avg_processed_per_year>20& !State %in% c(\"New Jersey\",\"Pennsylvania\"))\nstate_denials_summary<-counties_with_race %>%group_by(State,minority_binned)%>%\n summarize(Average_Percent_Denied=round(mean(percent_denied)))\n  \n  \n\ndatatable(state_denials_summary,  rownames = FALSE, extensions = c('Buttons','FixedColumns'),  options = list(pageLength = 100, fixedColumns = list(leftColumns = 1),\n                                                                                                            dom = 'Bfrtip',columnDefs = list(list(searchable = FALSE, targets = 1))\n                                                                                                            , \n                                                                                                            buttons = \n                                                                                                              list( list(\n                                                                                                                extend = 'collection',\n                                                                                                                buttons = list(list(extend='csv',\n                                                                                                                                    filename = 'avgPercentDenied_by_PercentMinority'),\n                                                                                                                               list(extend='excel',\n                                                                                                                                    filename = paste0('avgPercentDenied_by_PercentMinority') ) ),text=\"Download\"\n                                                                                                                \n                                                                                                                \n                                                                                                              ))))\n\n\n\n```\n\n### High/Low Minority Counties\n\n```{r}\n\n\ntop_three_minority_counties <- counties_with_race%>% group_by(State) %>% top_n(n = 3, wt = percent_nonwhite) %>% arrange(State,percent_nonwhite) %>% select(State,County, minority_binned,Black,Latino,`Native American`,percent_nonwhite, percent_denied)\n\nlowest_three_minority_counties<- counties_with_race%>% group_by(State) %>% top_n(n = -3, wt = percent_nonwhite) %>% arrange(State,percent_nonwhite) %>% select(State,County, minority_binned,Black,Latino,`Native American`, percent_nonwhite, percent_denied)\n\nhigh_low_minority<-rbind(top_three_minority_counties,lowest_three_minority_counties)\nhigh_low_minority<-high_low_minority%>%arrange(State,percent_nonwhite) \n\ndatatable(high_low_minority,  rownames = FALSE, extensions = c('Buttons','FixedColumns'),  options = list(pageLength = 100, fixedColumns = list(leftColumns = 1),\n                                                                                                           dom = 'Bfrtip',columnDefs = list(list(searchable = FALSE, targets = 1))\n                                                                                                           , \n                                                                                                           buttons = \n                                                                                                             list( list(\n                                                                                                               extend = 'collection',\n                                                                                                               buttons = list(list(extend='csv',\n                                                                                                                                   filename = 'avgPercentDenied_by_PercentMinority'),\n                                                                                                                              list(extend='excel',\n                                                                                                                                   filename = paste0('avgPercentDenied_by_PercentMinority') ) ),text=\"Download\"\n                                                                                                               \n                                                                                                               \n                                                                                                             ))))%>%\n  \n  formatStyle(c(\"State\",\"County\", \"minority_binned\",\"Black\",\"Latino\",\"percent_nonwhite\", \"percent_denied\"),fontSize='85%')\n\n\n\n\n```\n\n### County Data Cleaned\n\n```{r}\n#counties_with_race2<- counties_with_race %>%filter(avg_processed_per_year>20 )\ndatatable(counties_with_race,  rownames = FALSE, extensions = c('Buttons','FixedColumns'),  options = list(pageLength = 100, fixedColumns = list(leftColumns = 1),\n                                                                                                           dom = 'Bfrtip',columnDefs = list(list(searchable = FALSE, targets = 1))\n                                                                                                           , \n                                                                                                           buttons = \n                                                                                                             list( list(\n                                                                                                               extend = 'collection',\n                                                                                                               buttons = list(list(extend='csv',\n                                                                                                                                   filename = 'counties_with_race_data'),\n                                                                                                                              list(extend='excel',\n                                                                                                                                   filename = paste0('counties_with_race_data') ) ),text=\"Download\"\n                                                                                                               \n                                                                                                               \n                                                                                                             ))))%>%\n  \n  formatStyle(c(\"State\",\"County\", \"minority_binned\",\"Black\",\"Latino\",\"percent_nonwhite\", \"percent_denied\"),fontSize='85%')\n\n\n\n```\n\n### Model Summary\n\n####\n**Interpretation:** after controlling for the state and total claims processed, *a 10% increase in a county's non-white population corresponded to a 3.9% increase in denials.*\n```{r}\nmod2<-lm(log(total_denied)~percent_nonwhite +factor(State) +  log(total_processed_all_years),data=counties_with_race)\nsummary(mod2)#, robust=TRUE)\n\n```\n####\n\n```{r}\n\ncounties_with_race$predicted_log<-mod2$fitted.values\ncounties_with_race$est_percent_increased_denials<-100*counties_with_race$percent_nonwhite*(exp(0.003899)-1)\n\nplot(counties_with_race$percent_nonwhite , counties_with_race$percent_denied)\nlines(counties_with_race$percent_nonwhite, counties_with_race$est_percent_increased_denials,col=\"red\")\n\n#plot(counties_with_race$percent_nonwhite , counties_with_race$total_denied)\n#lines(counties_with_race$percent_nonwhite, counties_with_race$est_percent_increased_denials,col=\"red\")\n\n\n#abline(lm(log(counties_with_race$total_denied)~counties_with_race$percent_nonwhite), col=\"red\")\n```\n\n\n\n",
    "created" : 1519511494707.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "13|8|87|0|\n175|12|245|0|\n",
    "hash" : "3552416674",
    "id" : "8A98300B",
    "lastKnownWriteTime" : 1521470497,
    "last_content_update" : 1521470497213,
    "path" : "~/Documents/2018/02_Jaafari_Proj/src/R/Jaafari_Proj/Jaafari_Proj.Rmd",
    "project_path" : "Jaafari_Proj.Rmd",
    "properties" : {
        "last_setup_crc32" : "7E860FCC890b200b",
        "tempName" : "Untitled2"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}